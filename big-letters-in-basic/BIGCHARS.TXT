      rem lines 1-10 are a table of contents
      rem lines 10-19 describes what this program does
      rem lines 20-29 are a copyright notice
      rem lines 30-79 define variables
      rem lines 80-99 set preferences
      rem lines 100-980 define functions
      rem line 990 jumps to the main program block
      rem lines 1000-9999 are subroutines
      rem subroutines moved earlier to search them
      rem faster in basic
      rem lines 10000+ are the main program block
      rem acknowledgments from line 63800+

      rem *************************
      rem what this program does
      rem -------------------------
      rem so far it only prints decimal
      rem values of the first few characters
      rem from the c64's rom

      rem *************************
      rem gnu lesser public licence
      rem *************************

      rem *************************
      rem variable definition
      rem it is wise to use variable 
      rem names with max 2 characters
      rem names must not contain 
      rem basic tokens such as st, fn,
      rem sin, for etc.
      rem -------------------------

40    b0$ = "    " :rem 0 in 4-bit binary
41    b1$ = "   *" :
42    b2$ = "  * "
43    b3$ = "  **"
44    

      rem *************************
      rem set preferences
      rem -------------------------
83    poke 53280,0   :rem set screenframe (border) colour to black
84    poke 53272,23  :rem set upper lower case text mode
85    poke 53281,11  :rem set background to dark grey
86    poke 646,1     :rem set cursor colour to white
87    print chr$(147):rem clear the screen

     rem *************************   
     rem define functions
     rem functions must be defined before they are called
     rem functions may contain peeks
     rem -------------------------

      rem ***********************
      rem jump to the main program block
      rem bypassing the subroutines
      rem -----------------------
990   goto 10000
999   end
      
      rem *************************
1000  rem subroutines
      rem -------------------------

      rem ## enable charset visibility ##
      rem # this poke deactivates the interrupt timer 
      rem to stop the cpu reading from reading the I/O
      rem memory range whilst the character map overlay
      rem is activated
1014 poke 56334,peek(56334)and254
      rem # clearing the first bit of memory address 55
      rem enables character rom visibility from $d000-$dfff
1022 poke 1,51
1030 return

      rem ## clear charset visibility ##
      rem # this poke re-activates the interrupt timer 
      rem so that the computer does not crash
1043 poke 56334,peek(56334)or1
      rem # clearing the first bit of rmemory address 55
      rem enables character rom visibility from $d000-$dfff
1022 poke 1,55
1030 return

9998   end
9999   rem end subroutines

10000  rem *************************
10001  rem core code
10002  rem -------------------------

10010  gosub 1014: rem enable charset visibility
10020  for i=53248+8 to 53248+31:print peek(i): next
10030  gosub 1043: rem clear charset visibility

      rem end program
63900 end

      rem *************************
      rem Acknowledgments and 
      rem references.
      rem *************************
      rem - c64 wiki
      rem - coding64.org character mode to bitmap
      rem - tendim on stackoverflow multi-line functions

63997 rem *************************
63998 rem 63999 is the last line allowed in c64 basic
63999 rem *************************


